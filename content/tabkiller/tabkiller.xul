<?xml version="1.0"?>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the Tab Killer.
   -
   - The Initial Developer of the Original Code is SHIMODA Hiroshi.
   - Portions created by the Initial Developer are Copyright (C) 2004-2005
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s): SHIMODA Hiroshi <piro@p.club.ne.jp>
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://tabkiller/content/tabkiller.css" type="text/css"?>
<?xml-stylesheet href="chrome://tabkiller/locale/tabkiller.css" type="text/css"?>

<overlay xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

<script type="application/x-javascript"><![CDATA[

function killTabbrowser()
{
	if ('TabbrowserService' in window && !TabbrowserService.initialized)
		window.setTimeout(killTabbrowser, 0);

	var b = document.getElementById('content');
	if ('__tabkiller__initialized' in b) return;


	try {
		if (b.mPrefs.getBoolPref('tabkiller.disabled')) {
			b.__tabkiller__initialized = true;
			document.documentElement.removeAttribute('tabkiller-enabled');
			return;
		}
	}
	catch(e) {
		b.mPrefs.setBoolPref('tabkiller.disabled', false);
	}

	document.documentElement.setAttribute('tabkiller-enabled', true);

	try {
		var openWindow = b.mPrefs.getBoolPref('tabkiller.openWindowInsteadOfTab');
	}
	catch(e) {
		b.mPrefs.setBoolPref('tabkiller.openWindowInsteadOfTab', false);
	}


	for (var i = 0; i < b.mTabContainer.childNodes.length; i++)
		if (b.mTabContainer.childNodes[i] != b.selectedTab)
			b.removeTab(b.mTabContainer.childNodes[i]);

	b.mStrip.collapsed = true;
	b.mStrip.hidden    = true;

	b.addTab = function(aURI, aReferrer, aCharset)
	{
		var browserURI = location.href;
		var openWindow;
		try {
			openWindow = this.mPrefs.getBoolPref('tabkiller.openWindowInsteadOfTab');
		}
		catch(e) {
			openWindow = false;
		}

		if (
			openWindow &&
			'TabbrowserService' in window &&
			TabbrowserService.winHookMode > 0
			) {
			var w = arguments.callee.caller;
			do {
				w = w.__parent__;
			}
			while (w.__parent__);
			if (w != window && w.location.href == browserURI)
				openWindow = false;
		}

		if (openWindow) {
			window.openDialog(browserURI, '_blank', 'chrome,all,dialog=no', aURI, aCharset, aReferrer);
		}
		else {
			this.loadURI(aURI, aReferrer, aCharset);
		}
		return this.selectedTab;
	};
	b.removeTab = function(aTab) {};
	b.setStripVisibilityTo = function(aShow) {};
	b.getStripVisibility = function() { return false; }

	if ('TabbrowserService' in window) {
		b.__tabextensions__addTab = b.addTab;
		b.__tabextensions__removeTab = b.removeTab;
	}


	b.__tabkiller__initialized = true;
}

window.addEventListener('load', killTabbrowser, false);
window.addEventListener('load', killTabbrowser, false);

]]></script>

</overlay>
